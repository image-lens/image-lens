/*!
* ImageLens v1.0.0
* GitHub: https://github.com/kirillovmr/image-lens#readme
* Released under the MIT License.
* (c) 2023 Viktor Kirillov (https://kirillovmr.com)
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ImageLens=t()}(this,(function(){"use strict";function e(e,t,i){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var o=i.call(e,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function t(e,t){return function(e,t){if(t.get)return t.get.call(e);return t.value}(e,o(e,t,"get"))}function i(e,t,i){return function(e,t,i){if(t.set)t.set.call(e,i);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=i}}(e,o(e,t,"set"),i),i}function o(e,t,i){if(!t.has(e))throw new TypeError("attempted to "+i+" private field on non-instance");return t.get(e)}function n(e,t,i){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return i}function r(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function s(e,t,i){r(e,t),t.set(e,i)}function l(e,t){r(e,t),t.add(e)}function a(){return[this.refCanvasDim.w/this.imageDim.w,this.refCanvasDim.h/this.imageDim.h]}function c(e,t){const[i,o]=a.call(this),n=[];for(const t of e)n.push(t*i);const r=[];for(const e of t)r.push(e*o);return[n,r,i,o]}function h(e){const{canvasSizeMultiplier:t}=this.getConfig(),i=document.getElementById(e);if(null===i)return void console.warn('ImageLens: Unable to find DOM element with id "'.concat(e,'"'));var o=new Image;o.src=i.src,this.imageDim={w:o.width,h:o.height};const n=document.createElement("canvas");return n.id="ImageLens_".concat(e),n.width=o.width*t,n.height=o.height*t,n.style.background="url(".concat(i.src,")"),n.style.backgroundSize="100% 100%",i.style.display="none",i.parentNode.replaceChild(n,i),this.refCanvasDim={w:n.clientWidth,h:n.clientHeight},n}function u(e,t){const{canvasSizeMultiplier:i,plusCircleRadius:o,plusCircleLineWidth:n,plusCircleStrokeColorHover:r,plusCircleStrokeColor:s,plusCircleFillColorHover:l,plusCircleFillColor:a,plusIconLineWidth:c,plusIconStrokeColorHover:h,plusIconStrokeColor:u,plusIconWidth:d}=this.getConfig(),{clicked:f,hovered:g,centerX:m,centerY:p}=e;f||(t.save(),t.beginPath(),t.arc(m*i,p*i,o*i+n*i/2+1,0,2*Math.PI),t.clip(),t.clearRect(m*i-o*i-n*i,p*i-o*i-n*i,o*i*2+n*i*2+0,o*i*2+n*i*2+0),t.restore(),t.lineWidth=n*i,t.strokeStyle=g?r:s,t.fillStyle=g?l:a,t.beginPath(),t.arc(m*i,p*i,o*i,0,2*Math.PI),t.fill(),t.stroke(),t.closePath(),t.lineWidth=c*i,t.strokeStyle=g?h:u,t.beginPath(),t.moveTo(m*i-d*i,p*i),t.lineTo(m*i+d*i,p*i),t.moveTo(m*i,p*i-d*i),t.lineTo(m*i,p*i+d*i),t.stroke(),t.closePath())}function d(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{canvasSizeMultiplier:n,rectangleFrames:r,rectangleCircleRadius:s,plusCircleLineWidth:l,rectangleLineWidth:a,rectangleStrokeColor:c,rectangleSublineLength:h}=this.getConfig(),{centerX:d,centerY:f,pos:g}=e,{x1:m,x2:p,y1:v,y2:y}=g;let b=o?Math.max(Math.floor(.75*r),0):1;const C=Math.abs(p*n-m*n),k=Math.abs(y*n-v*n),w=C/r/2,x=k/r/2,P=()=>{if(b<0)return void i.clearRect(m*n-s*n-l*n,v*n-s*n-l*n,C+2*(s*n+l*n),k+2*(s*n+l*n));if(b>r)return;const e={x1:d*n-w*b,y1:f*n-x*b,x2:d*n+w*b,y2:f*n+x*b};i.clearRect(m*n-s*n-l*n,v*n-s*n-l*n,C+2*(s*n+l*n),k+2*(s*n+l*n));const g=Math.PI/2;i.lineWidth=a*n,i.strokeStyle=c,i.beginPath(),i.arc(e.x2,e.y2,s*n,0*g,1*g),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x2,e.y2+s*n),i.lineTo(e.x2-h*n,e.y2+s*n),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x2+s*n,e.y2),i.lineTo(e.x2+s*n,e.y2-h*n),i.stroke(),i.closePath(),i.beginPath(),i.arc(e.x1,e.y2,s*n,1*g,2*g),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x1,e.y2+s*n),i.lineTo(e.x1+h*n,e.y2+s*n),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x1-s*n,e.y2),i.lineTo(e.x1-s*n,e.y2-h*n),i.stroke(),i.closePath(),i.beginPath(),i.arc(e.x1,e.y1,s*n,2*g,3*g),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x1,e.y1-s*n),i.lineTo(e.x1+h*n,e.y1-s*n),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x1-s*n,e.y1),i.lineTo(e.x1-s*n,e.y1+h*n),i.stroke(),i.closePath(),i.beginPath(),i.arc(e.x2,e.y1,s*n,3*g,4*g),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x2,e.y1-s*n),i.lineTo(e.x2-h*n,e.y1-s*n),i.stroke(),i.closePath(),i.beginPath(),i.moveTo(e.x2+s*n,e.y1),i.lineTo(e.x2+s*n,e.y1+h*n),i.stroke(),i.closePath();for(const e of t)u.call(this,e,i);b=o?b-1:b+1,requestAnimationFrame(P)};P()}function f(e,t,i,o){const{plusCircleRadius:n}=this.getConfig(),{offsetX:r,offsetY:s}=e,l=[];for(let e=0;e<o.length;e++){const t=o[e],{centerX:i,centerY:a,clicked:h}=t,[u,d,f,g]=c.call(this,[i],[a]),m=(f+g)/2,p=Math.sqrt((u-r+2)**2+(d-s+2)**2);if(p<=n*m){if(h)continue;l.push({i:e,distance:p})}}let a=null;if(l.length>0){a=o[l.sort(((e,t)=>e.distance-t.distance))[0].i]}for(const e of o)e!==a&&e.hovered&&(e.hovered=!1,u.call(this,e,i));null===a||a.hovered||(a.hovered=!0,u.call(this,a,i)),t.style.cursor=l.length>0?"pointer":"default"}function g(e,t,i,o){const{plusCircleRadius:n}=this.getConfig(),{offsetX:r,offsetY:s}=e,l=this.getClickCallback();for(const e of o){const{centerX:a,centerY:h,clicked:u}=e,[f,g,m,p]=c.call(this,[a],[h]),v=(m+p)/2;if(Math.sqrt((f-r+2)**2+(g-s+2)**2)<=n*v){for(const t of o)t.clicked&&t!==e&&(t.clicked=!1,d.call(this,t,o,i,!0));u||(e.clicked=!0,d.call(this,e,o,i),l(e.item),t.style.cursor="default")}}}var m=new WeakMap,p=new WeakMap,v=new WeakMap,y=new WeakMap,b=new WeakSet,C=new WeakSet;class k{constructor(){l(this,C),l(this,b),s(this,m,{writable:!0,value:void 0}),s(this,p,{writable:!0,value:void 0}),s(this,v,{writable:!0,value:e=>{console.log("ImageLens: Clicked item",e)}}),s(this,y,{writable:!0,value:{canvasSizeMultiplier:1,plusCircleStrokeColor:"rgba(255, 255, 255, 0.5)",plusCircleStrokeColorHover:"rgba(255, 255, 255, 0.6)",plusCircleFillColor:"rgba(255, 255, 255, 0.2)",plusCircleFillColorHover:"rgba(255, 255, 255, 0.4)",plusCircleRadius:10,plusCircleLineWidth:2,plusIconLineWidth:2,plusIconWidth:5,plusIconStrokeColor:"rgba(255, 255, 255, 0.7)",plusIconStrokeColorHover:"rgba(255, 255, 255, 0.8)",rectangleFrames:10,rectangleCircleRadius:10,rectangleSublineLength:10,rectangleStrokeColor:"rgba(255, 255, 255, 1)",rectangleLineWidth:2}}),e(this,"imageDim",{w:0,h:0}),e(this,"refCanvasDim",{w:0,h:0})}getImageId(){return t(this,m)}setImageId(e){return i(this,m,e),this}getItems(){return t(this,p)}setItems(e){return i(this,p,e),this}getClickCallback(){return t(this,v)}setClickCallback(e){return i(this,v,e),this}getConfig(){return t(this,y)}setConfig(e){for(const[i,o]of Object.entries(e))Object.prototype.hasOwnProperty.call(t(this,y),i)?t(this,y)[i]=o:console.warn('ImageLens: Config key "'.concat(i,'" does not exist'));return this}init(e,i,o){if(void 0!==e&&this.setImageId(e),void 0===t(this,m))return void console.warn("ImageLens: No image id provided. Either set it with setImageId() or pass it to init()");if(void 0!==i&&this.setConfig(i),void 0!==o&&this.setItems(o),void 0===t(this,p))return void console.warn("ImageLens: No items provided. Either set them with setItems() or pass them to init()");const r=n(this,b,w).call(this,e);if(void 0===r)return this;const s=r.getContext("2d");if(null===s)return void console.warn("ImageLens: Unable to get canvas context");const l=t(this,p).map((e=>({...e,centerX:(e.pos.x1+e.pos.x2)/2,centerY:(e.pos.y1+e.pos.y2)/2,hovered:!1,clicked:!1})));for(const e of l)n(this,C,x).call(this,e,s);return r.addEventListener("mousemove",(e=>{f.call(this,e,r,s,l)})),r.addEventListener("mousedown",(e=>{g.call(this,e,r,s,l)})),addEventListener("resize",(e=>{this.refCanvasDim={w:r.clientWidth,h:r.clientHeight}})),r}}function w(e){return h.call(this,e)}function x(e,t){return u.call(this,e,t)}return e(k,"version","1.0.0"),k.default=k,"undefined"!=typeof window&&(console.log(""),console.log("%câœ¨ ImageLens v".concat(k.version),"color: black; background: white; font-size: 1.5em; padding: 0.25rem; margin: 0.5rem 0; border-radius: 4px; text-shadow: 1px 1px 0 #fffedd;"),console.log("")),k}));
